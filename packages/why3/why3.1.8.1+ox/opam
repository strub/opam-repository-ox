opam-version: "2.0"
maintainer: "guillaume.melquiond@inria.fr"
authors: [
  "François Bobot"
  "Jean-Christophe Filliâtre"
  "Claude Marché"
  "Guillaume Melquiond"
  "Andrei Paskevich"
]

homepage: "https://www.why3.org/"
license: "LGPL-2.1-only"
doc: "https://www.why3.org/doc/"
bug-reports: "https://gitlab.inria.fr/why3/why3/issues"
dev-repo: "git+https://gitlab.inria.fr/why3/why3.git"

tags: [
  "deductive"
  "program verification"
  "formal specification"
  "automated theorem prover"
  "interactive theorem prover"
]

build: [
  ["./autogen.sh"] {dev} # when pinning, there might be no configure file
  ["touch" "configure"]
  ["./configure"
   "--prefix" prefix
   "--disable-frama-c"
   "--disable-coq-libs"
   "--disable-js-of-ocaml"
   "--disable-re"
   "--enable-ocamlfind"
   "--disable-mpfr" {!mlmpfr:installed}
   "--enable-mpfr" {mlmpfr:installed}
   "--disable-zip" {!camlzip:installed}
   "--enable-zip" {camlzip:installed}
   "--disable-hypothesis-selection" {!ocamlgraph:installed}
   "--enable-hypothesis-selection" {ocamlgraph:installed}
   "--disable-stackify" {!ocamlgraph:installed | ocaml:version < "4.12"}
   "--enable-stackify" {ocamlgraph:installed & ocaml:version >= "4.12"}
   "--disable-ide"]
  [make "-j%{jobs}%" "all" "byte"]
  [make "doc" "stdlibdoc" "apidoc"] {with-doc}
]

install: [
  [make "install" "install-lib"]
  [make "DOCDIR=%{_:doc}%" "install-doc"] {with-doc}
]

depends: [
  "conf-autoconf" {build & dev}
  "ocaml" {>= "4.09" & < "5.4"}
  "ocamlfind" {build}
  "menhir" {>= "20200211"}
  "zarith"
]

depopts: [
  "camlzip"
  "ocamlgraph"
  "sexplib"
  "ppx_deriving" {build}
  "ppx_sexp_conv" {build}
  "mlmpfr"
]

conflicts: [
  "why3-base"
  "ocamlgraph" {< "1.8.2"}
  "mlmpfr" {< "4.0.0"}
]

synopsis: "Why3 environment for deductive program verification"

description: """
Why3 provides a rich language for specification and programming, called WhyML, and relies on external theorem provers, both automated and interactive, to discharge verification conditions. Why3 comes with a standard library of logical theories (integer and real arithmetic, Boolean operations, sets and maps, etc.) and basic programming data structures (arrays, queues, hash tables, etc.). A user can write WhyML programs directly and get correct-by-construction OCaml or C programs through an automated extraction mechanism. WhyML is also used as an intermediate language for the verification of C, Java, Rust, and Ada programs.

Why3 is a complete reimplementation of the former Why platform. Among the new features are: numerous extensions to the input language, a new architecture for calling external provers, and a well-designed API, allowing to use Why3 as a software library. An important emphasis is put on modularity and genericity, giving the end user a possibility to easily reuse Why3 formalizations or to add support for a new external prover if wanted."""

url {
  src: "https://why3.gitlabpages.inria.fr/releases/why3-1.8.1.tar.gz"
  checksum: [
    "sha256=4528fcf5b3fc64175340cef1e5ca494ec939e5221795cd925cc423e90d46156f"
    "md5=0a314008e7832f5cab1d4ec9f1019545"
  ]
}

patches: ["diff-ox.patch"]
extra-files: [
  [
    "diff-ox.patch"
    "sha256=4d0d2c8303aa7cbd534a9c8aea3a7d3dea2a4d19baaa1c575e6c560be1173d8b"
  ]
]
